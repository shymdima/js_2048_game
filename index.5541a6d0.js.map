{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_type_of.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\nfunction $0b5c99e6a0876eaa$export$71511d61b312f219(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */ key: \"areArraysEqual\",\n            value: function areArraysEqual(arr1, arr2) {\n                if (arr1.length !== arr2.length) return false;\n                return arr1.every(function(value, index) {\n                    return value === arr2[index];\n                });\n            }\n        },\n        {\n            key: \"createRandomNumbers\",\n            value: function createRandomNumbers(cell) {\n                var randomNumber = Math.floor(Math.random() * 11);\n                if (randomNumber <= 1) {\n                    cell.textContent = \"4\";\n                    cell.className = \"field-cell cell-\".concat(cell.textContent);\n                } else {\n                    cell.textContent = \"2\";\n                    cell.className = \"field-cell cell-\".concat(cell.textContent);\n                }\n            }\n        },\n        {\n            key: \"initiateGame\",\n            value: function initiateGame() {\n                var cell = document.querySelectorAll(\".field-cell\");\n                var firstNumber = Math.floor(Math.random() * 16);\n                var secondNumber;\n                do secondNumber = Math.floor(Math.random() * 16);\n                while (secondNumber === firstNumber);\n                this.createRandomNumbers(cell[firstNumber]);\n                this.createRandomNumbers(cell[secondNumber]);\n            }\n        },\n        {\n            key: \"moveZerosToEnd\",\n            value: function moveZerosToEnd(arr) {\n                var nonZeroElements = arr.filter(function(num) {\n                    return num !== 0;\n                });\n                for(var i = 1; i < nonZeroElements.length; i++)if (nonZeroElements[i] === nonZeroElements[i - 1]) {\n                    nonZeroElements[i - 1] *= 2;\n                    if (nonZeroElements[i - 1] === 2048) this.gameWin();\n                    nonZeroElements[i] = 0;\n                    this.getScore(nonZeroElements[i - 1]);\n                    i--;\n                }\n                nonZeroElements = nonZeroElements.filter(function(num) {\n                    return num !== 0;\n                });\n                var zeroCount = arr.length - nonZeroElements.length;\n                return (0, $227c6742e0ff6f82$export$71511d61b312f219)(nonZeroElements).concat((0, $227c6742e0ff6f82$export$71511d61b312f219)(Array(zeroCount).fill(0)));\n            }\n        },\n        {\n            key: \"moveZerosToStart\",\n            value: function moveZerosToStart(arr) {\n                var nonZeroElements = arr.filter(function(num) {\n                    return num !== 0;\n                });\n                for(var i = 1; i < nonZeroElements.length; i++)if (nonZeroElements[i] === nonZeroElements[i - 1]) {\n                    nonZeroElements[i - 1] *= 2;\n                    if (nonZeroElements[i - 1] === 2048) this.gameWin();\n                    nonZeroElements[i] = 0;\n                    this.getScore(nonZeroElements[i - 1]);\n                    i--;\n                }\n                nonZeroElements = nonZeroElements.filter(function(num) {\n                    return num !== 0;\n                });\n                var zeroCount = arr.length - nonZeroElements.length;\n                return (0, $227c6742e0ff6f82$export$71511d61b312f219)(Array(zeroCount).fill(0)).concat((0, $227c6742e0ff6f82$export$71511d61b312f219)(nonZeroElements));\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore(points) {\n                var scorecount = document.querySelector(\".game-score\");\n                var score = +scorecount.textContent;\n                score += points;\n                scorecount.textContent = score;\n            }\n        },\n        {\n            key: \"moveLeftEventListener\",\n            value: function moveLeftEventListener(e) {\n                var _this = this;\n                if (e.key === \"ArrowLeft\") {\n                    var rows = document.querySelectorAll(\".field-row\");\n                    var previousState = (0, $227c6742e0ff6f82$export$71511d61b312f219)(document.querySelectorAll(\".field-cell\")).map(function(cell) {\n                        return parseInt(cell.textContent) || 0;\n                    });\n                    rows.forEach(function(rowElement) {\n                        var cells = (0, $227c6742e0ff6f82$export$71511d61b312f219)(rowElement.querySelectorAll(\"td\"));\n                        var cellValues = cells.map(function(cell) {\n                            return parseInt(cell.textContent) || 0;\n                        });\n                        var result = _this.moveZerosToEnd(cellValues);\n                        rowElement.innerHTML = \"\";\n                        result.forEach(function(value, index) {\n                            var cell = cells[index];\n                            if (value === 0) {\n                                cell.textContent = \"\";\n                                cell.className = \"field-cell\";\n                            } else {\n                                cell.textContent = value;\n                                cell.className = \"field-cell cell-\".concat(value);\n                            }\n                            rowElement.appendChild(cell);\n                        });\n                    });\n                    var newState = (0, $227c6742e0ff6f82$export$71511d61b312f219)(document.querySelectorAll(\".field-cell\")).map(function(cell) {\n                        return parseInt(cell.textContent) || 0;\n                    });\n                    if (this.areArraysEqual(previousState, newState)) this.gameOver();\n                    else this.addCell();\n                }\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                window.addEventListener(\"keydown\", this.boundMoveLeftListener);\n            }\n        },\n        {\n            key: \"moveRightEventListener\",\n            value: function moveRightEventListener(e) {\n                var _this = this;\n                if (e.key === \"ArrowRight\") {\n                    var rows = document.querySelectorAll(\".field-row\");\n                    var previousState = (0, $227c6742e0ff6f82$export$71511d61b312f219)(document.querySelectorAll(\".field-cell\")).map(function(cell) {\n                        return parseInt(cell.textContent) || 0;\n                    });\n                    rows.forEach(function(rowElement) {\n                        var cells = (0, $227c6742e0ff6f82$export$71511d61b312f219)(rowElement.querySelectorAll(\"td\"));\n                        var cellValues = cells.map(function(cell) {\n                            return parseInt(cell.textContent) || 0;\n                        });\n                        var result = _this.moveZerosToStart(cellValues);\n                        rowElement.innerHTML = \"\";\n                        result.forEach(function(value, index) {\n                            var cell = cells[index];\n                            if (value === 0) {\n                                cell.textContent = \"\";\n                                cell.className = \"field-cell\";\n                            } else {\n                                cell.textContent = value;\n                                cell.className = \"field-cell cell-\".concat(value);\n                            }\n                            rowElement.appendChild(cell);\n                        });\n                    });\n                    var newState = (0, $227c6742e0ff6f82$export$71511d61b312f219)(document.querySelectorAll(\".field-cell\")).map(function(cell) {\n                        return parseInt(cell.textContent) || 0;\n                    });\n                    if (this.areArraysEqual(previousState, newState)) this.gameOver();\n                    else this.addCell();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                window.addEventListener(\"keydown\", this.boundMoveRightListener);\n            }\n        },\n        {\n            key: \"moveUpEventListener\",\n            value: function moveUpEventListener(e) {\n                var _this = this;\n                if (e.key === \"ArrowUp\") {\n                    var rows = document.querySelectorAll(\".field-row\");\n                    var columnNodes = [\n                        [],\n                        [],\n                        [],\n                        []\n                    ];\n                    var previousState = (0, $227c6742e0ff6f82$export$71511d61b312f219)(document.querySelectorAll(\".field-cell\")).map(function(cell) {\n                        return parseInt(cell.textContent) || 0;\n                    });\n                    rows.forEach(function(row) {\n                        for(var i = 0; i < 4; i++){\n                            var cells = row.querySelector(\"td:nth-child(\".concat(i + 1, \")\"));\n                            if (cells) columnNodes[i].push(cells);\n                        }\n                    });\n                    columnNodes.forEach(function(columnElement) {\n                        var cellValues = columnElement.map(function(cell) {\n                            return parseInt(cell.textContent) || 0;\n                        });\n                        var result = _this.moveZerosToEnd(cellValues);\n                        result.forEach(function(value, index) {\n                            if (value === 0) {\n                                columnElement[index].textContent = \"\";\n                                columnElement[index].className = \"field-cell\";\n                            } else {\n                                columnElement[index].textContent = value;\n                                columnElement[index].className = \"field-cell cell-\".concat(value);\n                            }\n                        });\n                    });\n                    var newState = (0, $227c6742e0ff6f82$export$71511d61b312f219)(document.querySelectorAll(\".field-cell\")).map(function(cell) {\n                        return parseInt(cell.textContent) || 0;\n                    });\n                    if (this.areArraysEqual(previousState, newState)) this.gameOver();\n                    else this.addCell();\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                window.addEventListener(\"keydown\", this.boundMoveUpListener);\n            }\n        },\n        {\n            key: \"moveDownEventListener\",\n            value: function moveDownEventListener(e) {\n                var _this = this;\n                if (e.key === \"ArrowDown\") {\n                    var rows = document.querySelectorAll(\".field-row\");\n                    var columnNodes = [\n                        [],\n                        [],\n                        [],\n                        []\n                    ];\n                    var previousState = (0, $227c6742e0ff6f82$export$71511d61b312f219)(document.querySelectorAll(\".field-cell\")).map(function(cell) {\n                        return parseInt(cell.textContent) || 0;\n                    });\n                    rows.forEach(function(row) {\n                        for(var i = 0; i < 4; i++){\n                            var cells = row.querySelector(\"td:nth-child(\".concat(i + 1, \")\"));\n                            if (cells) columnNodes[i].push(cells);\n                        }\n                    });\n                    columnNodes.forEach(function(columnElement) {\n                        var cellValues = columnElement.map(function(cell) {\n                            return parseInt(cell.textContent) || 0;\n                        });\n                        var result = _this.moveZerosToStart(cellValues);\n                        result.forEach(function(value, index) {\n                            if (value === 0) {\n                                columnElement[index].textContent = \"\";\n                                columnElement[index].className = \"field-cell\";\n                            } else {\n                                columnElement[index].textContent = value;\n                                columnElement[index].className = \"field-cell cell-\".concat(value);\n                            }\n                        });\n                    });\n                    var newState = (0, $227c6742e0ff6f82$export$71511d61b312f219)(document.querySelectorAll(\".field-cell\")).map(function(cell) {\n                        return parseInt(cell.textContent) || 0;\n                    });\n                    if (this.areArraysEqual(previousState, newState)) this.gameOver();\n                    else this.addCell();\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                window.addEventListener(\"keydown\", this.boundMoveDownListener);\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {}\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"startFunction\",\n            value: function startFunction() {\n                var startButton = document.querySelector(\".start\");\n                var startMessage = document.querySelector(\".message-start\");\n                if (startButton) {\n                    startButton.textContent = \"Restart\";\n                    startButton.classList.remove(\"start\");\n                    startButton.classList.add(\"restart\");\n                } else return;\n                if (startMessage) startMessage.classList.add(\"hidden\");\n                else return;\n                this.boundMoveLeftListener = this.moveLeftEventListener.bind(this);\n                this.boundMoveRightListener = this.moveRightEventListener.bind(this);\n                this.boundMoveUpListener = this.moveUpEventListener.bind(this);\n                this.boundMoveDownListener = this.moveDownEventListener.bind(this);\n                this.moveLeft();\n                this.moveRight();\n                this.moveUp();\n                this.moveDown();\n                this.restart();\n                this.initiateGame();\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                var startButton = document.querySelector(\".start\");\n                if (!startButton) startButton.removeEventListener(\"click\", this.startFunction.bind(this));\n                else startButton.addEventListener(\"click\", this.startFunction.bind(this));\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                var _this = this;\n                var restartButton = document.querySelector(\".restart\");\n                if (!restartButton) return;\n                restartButton.addEventListener(\"click\", function() {\n                    var scorecount = document.querySelector(\".game-score\");\n                    var cells = document.querySelectorAll(\".field-cell\");\n                    var cellsArray = (0, $227c6742e0ff6f82$export$71511d61b312f219)(cells).map(function(cell) {\n                        return parseInt(cell.textContent) || 0;\n                    });\n                    var nonEmptyCells = cellsArray.filter(function(content) {\n                        return content !== 0;\n                    });\n                    if (nonEmptyCells.length === 2 && scorecount.textContent === \"0\") ;\n                    else {\n                        cells.forEach(function(cell) {\n                            cell.textContent = \"\";\n                            cell.className = \"field-cell\";\n                        });\n                        _this.addCell();\n                        _this.addCell();\n                        scorecount.textContent = 0;\n                        var messageGameOver = document.querySelector(\".message-lose\");\n                        var messageGameWin = document.querySelector(\".message-win\");\n                        messageGameOver.classList.add(\"hidden\");\n                        messageGameWin.classList.add(\"hidden\");\n                    }\n                });\n            }\n        },\n        {\n            key: \"checkBeforeGameOver\",\n            value: function checkBeforeGameOver() {\n                var rows = document.querySelectorAll(\".field-row\");\n                var columnNodes = [\n                    [],\n                    [],\n                    [],\n                    []\n                ];\n                rows.forEach(function(row) {\n                    for(var i = 0; i < 4; i++){\n                        var cell = row.querySelector(\"td:nth-child(\".concat(i + 1, \")\"));\n                        if (cell) columnNodes[i].push(cell);\n                    }\n                });\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    var _loop = function() {\n                        var rowElement = _step.value;\n                        var cells = (0, $227c6742e0ff6f82$export$71511d61b312f219)(rowElement.querySelectorAll(\"td\"));\n                        var cellValues = cells.map(function(cell) {\n                            return parseInt(cell.textContent) || 0;\n                        });\n                        for(var i = 0; i < cellValues.length - 1; i++){\n                            if (cellValues[i] === 0 || cellValues[i] === cellValues[i + 1]) return {\n                                v: false\n                            };\n                        }\n                    };\n                    for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var _ret = _loop();\n                        if ((0, $0b5c99e6a0876eaa$export$71511d61b312f219)(_ret) === \"object\") return _ret.v;\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                try {\n                    var _loop1 = function() {\n                        var columnElement = _step1.value;\n                        var cellValues = columnElement.map(function(cell) {\n                            return parseInt(cell.textContent) || 0;\n                        });\n                        for(var i = 0; i < cellValues.length - 1; i++){\n                            if (cellValues[i] === 0 || cellValues[i] === cellValues[i + 1]) return {\n                                v: false\n                            };\n                        }\n                    };\n                    for(var _iterator1 = columnNodes[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                        var _ret1 = _loop1();\n                        if ((0, $0b5c99e6a0876eaa$export$71511d61b312f219)(_ret1) === \"object\") return _ret1.v;\n                    }\n                } catch (err) {\n                    _didIteratorError1 = true;\n                    _iteratorError1 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                            _iterator1.return();\n                        }\n                    } finally{\n                        if (_didIteratorError1) {\n                            throw _iteratorError1;\n                        }\n                    }\n                }\n                return true;\n            }\n        },\n        {\n            key: \"gameWin\",\n            value: function gameWin() {\n                var winMessage = document.querySelector(\".message-win\");\n                winMessage.classList.remove(\"hidden\");\n                window.removeEventListener(\"keydown\", this.boundMoveUpListener);\n                window.removeEventListener(\"keydown\", this.boundMoveDownListener);\n                window.removeEventListener(\"keydown\", this.boundMoveLeftListener);\n                window.removeEventListener(\"keydown\", this.boundMoveRightListener);\n            }\n        },\n        {\n            key: \"gameOver\",\n            value: function gameOver() {\n                if (this.checkBeforeGameOver()) {\n                    var overMessage = document.querySelector(\".message-lose\");\n                    overMessage.classList.remove(\"hidden\");\n                    window.removeEventListener(\"keydown\", this.boundMoveUpListener);\n                    window.removeEventListener(\"keydown\", this.boundMoveDownListener);\n                    window.removeEventListener(\"keydown\", this.boundMoveLeftListener);\n                    window.removeEventListener(\"keydown\", this.boundMoveRightListener);\n                }\n            }\n        },\n        {\n            key: \"addCell\",\n            value: function addCell() {\n                var gameCells = document.querySelectorAll(\".field-cell\");\n                var emptyCells = (0, $227c6742e0ff6f82$export$71511d61b312f219)(gameCells).filter(function(cell) {\n                    return cell.textContent.length === 0;\n                });\n                var randomIndex = Math.floor(Math.random() * emptyCells.length);\n                this.createRandomNumbers(emptyCells[randomIndex]);\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\n$197cd56b15c33885$var$game.start();\n$197cd56b15c33885$var$game.restart(); // Write your code here\n\n})();\n//# sourceMappingURL=index.5541a6d0.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\ngame.start();\ngame.restart();\n\n// Write your code here\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\n\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  areArraysEqual(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n      return false;\n    }\n\n    return arr1.every((value, index) => value === arr2[index]);\n  }\n\n  createRandomNumbers(cell) {\n    const randomNumber = Math.floor(Math.random() * 11);\n\n    if (randomNumber <= 1) {\n      cell.textContent = '4';\n      cell.className = `field-cell cell-${cell.textContent}`;\n    } else {\n      cell.textContent = '2';\n      cell.className = `field-cell cell-${cell.textContent}`;\n    }\n  }\n\n  initiateGame() {\n    const cell = document.querySelectorAll('.field-cell');\n\n    const firstNumber = Math.floor(Math.random() * 16);\n    let secondNumber;\n\n    do {\n      secondNumber = Math.floor(Math.random() * 16);\n    } while (secondNumber === firstNumber);\n\n    this.createRandomNumbers(cell[firstNumber]);\n    this.createRandomNumbers(cell[secondNumber]);\n  }\n\n  moveZerosToEnd(arr) {\n    let nonZeroElements = arr.filter((num) => num !== 0);\n\n    for (let i = 1; i < nonZeroElements.length; i++) {\n      if (nonZeroElements[i] === nonZeroElements[i - 1]) {\n        nonZeroElements[i - 1] *= 2;\n\n        if (nonZeroElements[i - 1] === 2048) {\n          this.gameWin();\n        }\n\n        nonZeroElements[i] = 0;\n        this.getScore(nonZeroElements[i - 1]);\n        i--;\n      }\n    }\n\n    nonZeroElements = nonZeroElements.filter((num) => num !== 0);\n\n    const zeroCount = arr.length - nonZeroElements.length;\n\n    return [...nonZeroElements, ...Array(zeroCount).fill(0)];\n  }\n\n  moveZerosToStart(arr) {\n    let nonZeroElements = arr.filter((num) => num !== 0);\n\n    for (let i = 1; i < nonZeroElements.length; i++) {\n      if (nonZeroElements[i] === nonZeroElements[i - 1]) {\n        nonZeroElements[i - 1] *= 2;\n\n        if (nonZeroElements[i - 1] === 2048) {\n          this.gameWin();\n        }\n\n        nonZeroElements[i] = 0;\n        this.getScore(nonZeroElements[i - 1]);\n        i--;\n      }\n    }\n\n    nonZeroElements = nonZeroElements.filter((num) => num !== 0);\n\n    const zeroCount = arr.length - nonZeroElements.length;\n\n    return [...Array(zeroCount).fill(0), ...nonZeroElements];\n  }\n\n  getScore(points) {\n    const scorecount = document.querySelector('.game-score');\n\n    let score = +scorecount.textContent;\n\n    score += points;\n    scorecount.textContent = score;\n  }\n\n  moveLeftEventListener(e) {\n    if (e.key === 'ArrowLeft') {\n      const rows = document.querySelectorAll('.field-row');\n      const previousState = [...document.querySelectorAll('.field-cell')].map(\n        (cell) => parseInt(cell.textContent) || 0,\n      );\n\n      rows.forEach((rowElement) => {\n        const cells = [...rowElement.querySelectorAll('td')];\n        const cellValues = cells.map((cell) => parseInt(cell.textContent) || 0);\n\n        const result = this.moveZerosToEnd(cellValues);\n\n        rowElement.innerHTML = '';\n\n        result.forEach((value, index) => {\n          const cell = cells[index];\n\n          if (value === 0) {\n            cell.textContent = '';\n            cell.className = 'field-cell';\n          } else {\n            cell.textContent = value;\n            cell.className = `field-cell cell-${value}`;\n          }\n\n          rowElement.appendChild(cell);\n        });\n      });\n\n      const newState = [...document.querySelectorAll('.field-cell')].map(\n        (cell) => parseInt(cell.textContent) || 0,\n      );\n\n      if (this.areArraysEqual(previousState, newState)) {\n        this.gameOver();\n      } else {\n        this.addCell();\n      }\n    }\n  }\n\n  moveLeft() {\n    window.addEventListener('keydown', this.boundMoveLeftListener);\n  }\n\n  moveRightEventListener(e) {\n    if (e.key === 'ArrowRight') {\n      const rows = document.querySelectorAll('.field-row');\n      const previousState = [...document.querySelectorAll('.field-cell')].map(\n        (cell) => parseInt(cell.textContent) || 0,\n      );\n\n      rows.forEach((rowElement) => {\n        const cells = [...rowElement.querySelectorAll('td')];\n        const cellValues = cells.map((cell) => parseInt(cell.textContent) || 0);\n\n        const result = this.moveZerosToStart(cellValues);\n\n        rowElement.innerHTML = '';\n\n        result.forEach((value, index) => {\n          const cell = cells[index];\n\n          if (value === 0) {\n            cell.textContent = '';\n            cell.className = 'field-cell';\n          } else {\n            cell.textContent = value;\n            cell.className = `field-cell cell-${value}`;\n          }\n\n          rowElement.appendChild(cell);\n        });\n      });\n\n      const newState = [...document.querySelectorAll('.field-cell')].map(\n        (cell) => parseInt(cell.textContent) || 0,\n      );\n\n      if (this.areArraysEqual(previousState, newState)) {\n        this.gameOver();\n      } else {\n        this.addCell();\n      }\n    }\n  }\n\n  moveRight() {\n    window.addEventListener('keydown', this.boundMoveRightListener);\n  }\n\n  moveUpEventListener(e) {\n    if (e.key === 'ArrowUp') {\n      const rows = document.querySelectorAll('.field-row');\n      const columnNodes = [[], [], [], []];\n      const previousState = [...document.querySelectorAll('.field-cell')].map(\n        (cell) => parseInt(cell.textContent) || 0,\n      );\n\n      rows.forEach((row) => {\n        for (let i = 0; i < 4; i++) {\n          const cells = row.querySelector(`td:nth-child(${i + 1})`);\n\n          if (cells) {\n            columnNodes[i].push(cells);\n          }\n        }\n      });\n\n      columnNodes.forEach((columnElement) => {\n        const cellValues = columnElement.map(\n          (cell) => parseInt(cell.textContent) || 0,\n        );\n        const result = this.moveZerosToEnd(cellValues);\n\n        result.forEach((value, index) => {\n          if (value === 0) {\n            columnElement[index].textContent = '';\n            columnElement[index].className = 'field-cell';\n          } else {\n            columnElement[index].textContent = value;\n            columnElement[index].className = `field-cell cell-${value}`;\n          }\n        });\n      });\n\n      const newState = [...document.querySelectorAll('.field-cell')].map(\n        (cell) => parseInt(cell.textContent) || 0,\n      );\n\n      if (this.areArraysEqual(previousState, newState)) {\n        this.gameOver();\n      } else {\n        this.addCell();\n      }\n    }\n  }\n\n  moveUp() {\n    window.addEventListener('keydown', this.boundMoveUpListener);\n  }\n\n  moveDownEventListener(e) {\n    if (e.key === 'ArrowDown') {\n      const rows = document.querySelectorAll('.field-row');\n      const columnNodes = [[], [], [], []];\n      const previousState = [...document.querySelectorAll('.field-cell')].map(\n        (cell) => parseInt(cell.textContent) || 0,\n      );\n\n      rows.forEach((row) => {\n        for (let i = 0; i < 4; i++) {\n          const cells = row.querySelector(`td:nth-child(${i + 1})`);\n\n          if (cells) {\n            columnNodes[i].push(cells);\n          }\n        }\n      });\n\n      columnNodes.forEach((columnElement) => {\n        const cellValues = columnElement.map(\n          (cell) => parseInt(cell.textContent) || 0,\n        );\n        const result = this.moveZerosToStart(cellValues);\n\n        result.forEach((value, index) => {\n          if (value === 0) {\n            columnElement[index].textContent = '';\n            columnElement[index].className = 'field-cell';\n          } else {\n            columnElement[index].textContent = value;\n            columnElement[index].className = `field-cell cell-${value}`;\n          }\n        });\n      });\n\n      const newState = [...document.querySelectorAll('.field-cell')].map(\n        (cell) => parseInt(cell.textContent) || 0,\n      );\n\n      if (this.areArraysEqual(previousState, newState)) {\n        this.gameOver();\n      } else {\n        this.addCell();\n      }\n    }\n  }\n\n  moveDown() {\n    window.addEventListener('keydown', this.boundMoveDownListener);\n  }\n\n  /**\n   * @returns {number}\n   */\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {}\n\n  /**\n   * Starts the game.\n   */\n\n  startFunction() {\n    const startButton = document.querySelector('.start');\n    const startMessage = document.querySelector('.message-start');\n\n    if (startButton) {\n      startButton.textContent = 'Restart';\n      startButton.classList.remove('start');\n      startButton.classList.add('restart');\n    } else {\n      return;\n    }\n\n    if (startMessage) {\n      startMessage.classList.add('hidden');\n    } else {\n      return;\n    }\n\n    this.boundMoveLeftListener = this.moveLeftEventListener.bind(this);\n    this.boundMoveRightListener = this.moveRightEventListener.bind(this);\n    this.boundMoveUpListener = this.moveUpEventListener.bind(this);\n    this.boundMoveDownListener = this.moveDownEventListener.bind(this);\n\n    this.moveLeft();\n    this.moveRight();\n    this.moveUp();\n    this.moveDown();\n    this.restart();\n    this.initiateGame();\n  }\n\n  start() {\n    const startButton = document.querySelector('.start');\n\n    if (!startButton) {\n      startButton.removeEventListener('click', this.startFunction.bind(this));\n    } else {\n      startButton.addEventListener('click', this.startFunction.bind(this));\n    }\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    const restartButton = document.querySelector('.restart');\n\n    if (!restartButton) {\n      return;\n    }\n\n    restartButton.addEventListener('click', () => {\n      const scorecount = document.querySelector('.game-score');\n      const cells = document.querySelectorAll('.field-cell');\n\n      const cellsArray = [...cells].map(\n        (cell) => parseInt(cell.textContent) || 0,\n      );\n      const nonEmptyCells = cellsArray.filter((content) => content !== 0);\n\n      if (nonEmptyCells.length === 2 && scorecount.textContent === '0') {\n      } else {\n        cells.forEach((cell) => {\n          cell.textContent = '';\n          cell.className = 'field-cell';\n        });\n\n        this.addCell();\n        this.addCell();\n\n        scorecount.textContent = 0;\n\n        const messageGameOver = document.querySelector('.message-lose');\n        const messageGameWin = document.querySelector('.message-win');\n\n        messageGameOver.classList.add('hidden');\n        messageGameWin.classList.add('hidden');\n      }\n    });\n  }\n\n  checkBeforeGameOver() {\n    const rows = document.querySelectorAll('.field-row');\n    const columnNodes = [[], [], [], []];\n\n    rows.forEach((row) => {\n      for (let i = 0; i < 4; i++) {\n        const cell = row.querySelector(`td:nth-child(${i + 1})`);\n\n        if (cell) {\n          columnNodes[i].push(cell);\n        }\n      }\n    });\n\n    for (const rowElement of rows) {\n      const cells = [...rowElement.querySelectorAll('td')];\n      const cellValues = cells.map((cell) => parseInt(cell.textContent) || 0);\n\n      for (let i = 0; i < cellValues.length - 1; i++) {\n        if (cellValues[i] === 0 || cellValues[i] === cellValues[i + 1]) {\n          return false;\n        }\n      }\n    }\n\n    for (const columnElement of columnNodes) {\n      const cellValues = columnElement.map(\n        (cell) => parseInt(cell.textContent) || 0,\n      );\n\n      for (let i = 0; i < cellValues.length - 1; i++) {\n        if (cellValues[i] === 0 || cellValues[i] === cellValues[i + 1]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  gameWin() {\n    const winMessage = document.querySelector('.message-win');\n\n    winMessage.classList.remove('hidden');\n\n    window.removeEventListener('keydown', this.boundMoveUpListener);\n    window.removeEventListener('keydown', this.boundMoveDownListener);\n    window.removeEventListener('keydown', this.boundMoveLeftListener);\n    window.removeEventListener('keydown', this.boundMoveRightListener);\n  }\n  gameOver() {\n    if (this.checkBeforeGameOver()) {\n      const overMessage = document.querySelector('.message-lose');\n\n      overMessage.classList.remove('hidden');\n\n      window.removeEventListener('keydown', this.boundMoveUpListener);\n      window.removeEventListener('keydown', this.boundMoveDownListener);\n      window.removeEventListener('keydown', this.boundMoveLeftListener);\n      window.removeEventListener('keydown', this.boundMoveRightListener);\n    }\n  }\n\n  addCell() {\n    const gameCells = document.querySelectorAll('.field-cell');\n\n    const emptyCells = [...gameCells].filter(\n      (cell) => cell.textContent.length === 0,\n    );\n\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n\n    this.createRandomNumbers(emptyCells[randomIndex]);\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _type_of(obj) {\n    \"@swc/helpers - typeof\";\n\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\nexport { _type_of as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$0b5c99e6a0876eaa$export$71511d61b312f219","obj","$197cd56b15c33885$var$game","protoProps","Game","instance","Constructor","key","value","arr1","every","index","cell","randomNumber","Math","floor","random","textContent","className","concat","secondNumber","document","querySelectorAll","firstNumber","createRandomNumbers","nonZeroElements","filter","num","gameWin","getScore","zeroCount","fill","points","scorecount","querySelector","score","e","_this","rows","previousState","map","parseInt","forEach","rowElement","cells","cellValues","result","moveZerosToEnd","innerHTML","appendChild","newState","areArraysEqual","gameOver","addCell","window","addEventListener","boundMoveLeftListener","moveZerosToStart","boundMoveRightListener","columnNodes","row","push","columnElement","boundMoveUpListener","boundMoveDownListener","startButton","startMessage","classList","remove","add","moveLeftEventListener","bind","moveRightEventListener","moveUpEventListener","moveDownEventListener","moveLeft","moveRight","moveUp","moveDown","restart","initiateGame","startFunction","removeEventListener","restartButton","nonEmptyCells","cellsArray","content","messageGameOver","messageGameWin","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","_ret","_loop","v","err","return","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","_ret1","_loop1","winMessage","checkBeforeGameOver","overMessage","emptyCells","randomIndex","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","start"],"version":3,"file":"index.5541a6d0.js.map"}